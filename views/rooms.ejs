<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>ChatCat - Rooms</title>
	<link rel="stylesheet" href="/css/roomsStyles.css">
	<script src="/js/jquery-2.1.4.min.js"></script>
	<!-- S10) socket io serves this internally and that's how it reaches the html page-->
	<script src="/socket.io/socket.io.js"></script>
	<script>
	// S11) Connects the server to the client  
	'use strict';
	$(() => {
		// this initiates the socket connection between server and client
		// S12) roomsList is not a route, this is a socket namespace
		// its a pipe carrying all the socket
		// it has multiple unique pipelines
		// S18) Sets the local host to the host provided in the res variable
		let socket = io('<%= host %>' + '/roomslist',{
			transports: ['websocket']
		})
		// S28) create a jquery input field
		let newRoomInput = $("input[name='roomName']");
		// S14) turns on the socket 
		// socket.on('connect', () => console.log('Connected to server'))
		// S20) Create a function called renderChatRoom that accepts an array
		let renderChatRooms = chatrooms => {
			let roomsListDiv = $('#roomsListUL');
			let listStr = '';
			//S21) Iterate over the array to create a list
			for(let cat of chatrooms){
				listStr += `<a href="/chat/${cat.roomID}"><li>${cat.room}</li></a>`
			}
			//S22) clear out roomsListDiv variable and pushing the listStr variable in 
			roomsListDiv.html('').append(listStr);
		}
		// S23) Get a list of chatrooms using socket.emit
		// Dispatches an event called getChatRooms which signals our server to trigger the event
		socket.emit('getChatRooms');
		// S26) Set an event listener for chatRoomsList which is coming from the server
		// 
		socket.on('chatRoomsList', chatrooms => {
			console.log(chatrooms);
			// S27) generates the chatrooms
			renderChatRooms(JSON.parse(chatrooms));
		}) 
		// S29) Create a jquery button
		$('#createBtn').on('click', () => {
			// S30) If newRoomInput is not blank, then emit a createNewRoom event to server with the newRoomInput
			if(newRoomInput.val() !== ''){
				socket.emit('createNewRoom',newRoomInput.val());
				// S31) Clear out the input field
				newRoomInput.val('');
			}
		})
	})
	</script>
</head>
<body>
	<div class="container">
		<div class="titlePanel">
			<h1>ChatCAT | Select or Create a Chatroom</h1>
		</div>
		<div class="controls">
			<div class="userPicHolder"><img src="<%= user.profilePic %>" alt="<%= user.fullName %>"></div>
			<p class="userName"></p>
			<a href="/logout" id="logOutBtn">Logout</a>
		</div>
		<div class="controls">
			<input type="text" name="roomName" placeholder="Create a new Chatroom">
			<a href="#" id="createBtn">Create</a>
		</div>
		<div class="roomsListDiv">
			<ul class="roomsList" id="roomsListUL">
			<!-- Loop list items here -->
				
				<a href="/chat"><li>Coffee and Conversations</li></a>
			<!-- Loop ends -->
			</ul>
		</div>
	</div>
</body>
</html>