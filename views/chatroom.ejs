<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<title>NodeChat</title>
	<link rel="stylesheet" href="/css/chatroomStyles.css">
	<script src="/js/jquery-2.1.4.min.js"></script>
	<script src="/socket.io/socket.io.js"></script>
	<script src="https://widget.cloudinary.com/global/all.js"></script>
	<script>
	'use strict';
	$(() => {
		// R8 set client side to only use web sockets 
		let socket = io('<%= host %>' + '/chatter',{
			transports: ['websocket']
		});
		let roomID = '<%= roomID %>';
		let user = '<%= user.fullName %>';
		let userID = '<%= user.uniqueUserId %>';
		let userPic = '<%= user.profilePic %>';
		// Sets the class chatUsers which is linked below in the div 
		let chatUsers = $('.chatUsers')
		let chatInput = $("input[name='userInput']")
		let chatMessagesDiv = $('.chatMessages');
		let filePicker = $('#uploadFile');
		// Set an event emitter to connect to the server chatter pipeline
		socket.on('connect', () => { 
			socket.emit('join', {
				roomID,
				user,
				userPic
			})
		})
		// Creates a user list 
		let userList = user => {
			return `<div class="userBlock">
						<div class="userPic"><img src="${user.userPic}" alt="${user.user}"></div>
						<div class="userName">${user.user}</div>
					</div>`
		}
		// Sets an event listener for updateUsersList
		socket.on('updateUsersList', data => {
			let parsedData = JSON.parse(data);
			let usersListData = '';
			// creates usersListData based on array list to be displayed on page, bunch of divs
			for(let user of parsedData){
				usersListData += userList(user);
			}
			chatUsers.html('').html(usersListData)
		})

		socket.on('updateMessageList', data => {
			let parsedData = JSON.parse(data);
			let messageListData = '';
			console.log('oldmessages',parsedData);
			for(let message of parsedData){
				updateFeed(message.userPic,message.chatContent)
			}
		})

		// Establish updateFeed functionality that autopushes updates to everyone
		// without using websockets
		let updateFeed = (userPic, message) => {
			let template = `<div class="chatBlock">
								<div class="userPic"><img src="${userPic}"></div>
								<div class="chatMsg">${message}</div>
							</div>`;
			// we prepend so message appear at the bottom
			// 
			$(template).hide().prependTo(chatMessagesDiv).slideDown(200);
		}

		socket.on('inMessage', data => {
			let parsedData = JSON.parse(data);
			console.log('inMessage',parsedData)
			updateFeed(parsedData.userPic,parsedData.message);
		})

		chatInput.on('keyup',function(evt){
			evt.preventDefault(); // tell browser not to react
			let messageFld = $(this);
			//13 is the enter key
			if(evt.which === 13 && messageFld.val() !== ''){
				socket.emit('newMessage', {
					userID,
					roomID,
					user,
					userPic,
					message: messageFld.val()
				})
				messageFld.val('');
			}
		})
		// set up cloudinary to launch onclick
		filePicker.on('click',function(evt){
			cloudinary.openUploadWidget({
				// C4) provide info with preset to downsize image
				cloud_name: 'mtgmusic3',
				upload_preset: 'djui9gu3'
			}, (error,result) => {
				if(!error){
					let tmp = '';
					for(let img of result){
						tmp += `<img src="${img.url}">`
					}
					updateFeed(userPic,tmp);
					socket.emit('newMessage',{
						roomID,
						user,
						userPic,
						message: tmp
					})
			};
		})
	})
})
	</script>
</head>
<body>
	<div class="container">
		<div class="titlePanel">
			<h1>NodeChat | <%= room %></h1>
		</div>
		<div class="controls">
			<div class="userPicHolder"><img src="<%= user.profilePic %>" alt="<%= user.fullName %>"></div>
			<p class="userName">"<%= user.fullName %>"</p>
			<a href="/rooms" id="roomsBtn">Rooms</a>
			<a href="/logout" id="logOutBtn">Logout</a>
		</div>
		<div class="chatListDiv">
			<div class="chatMessagesPanel">
				<div class="chatMessages">
				</div>
				<div class="typePanel">
					<input type="text" name="userInput" placeholder="Type here and press enter">
					<a href="#" id="uploadFile" class="fileUploadBtn">Photo</a>
				</div>
			</div>
			<div class="chatUsers">
			</div>
		</div>
	</div>
</body>
</html>